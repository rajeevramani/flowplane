openapi: 3.0.0
info:
  title: HTTP Method Extraction Demo
  version: 1.0.0
  description: |
    Demonstrates HTTP method extraction and path template conversion.

    This OpenAPI spec showcases how flowplane creates separate routes for each HTTP method:
    - GET /anything/users → route with :method=GET matcher
    - POST /anything/users → route with :method=POST matcher
    - GET /anything/users/{id} → route with :method=GET matcher + template path matching
    - PUT /anything/users/{id} → route with :method=PUT matcher + template path matching
    - DELETE /anything/users/{id} → route with :method=DELETE matcher + template path matching

    Total routes created: 5 (one per HTTP method)

    To import:
    curl -X POST "http://localhost:8080/api/v1/api-definitions/from-openapi?team=demo&listenerIsolation=true" \
      -H "Content-Type: application/yaml" \
      -H "Authorization: Bearer YOUR_TOKEN" \
      --data-binary @method-extraction-demo.yaml

    After import, find your assigned port:
    curl http://localhost:8080/api/v1/api-definitions/{API_ID}/bootstrap | jq -r '.static_resources.listeners[] | select(.name | contains("platform")) | .address.socket_address.port_value'

    Then test each HTTP method (IMPORTANT: Must include Host header):
    curl http://localhost:{PORT}/anything/users -H "Host: httpbin.org"
    curl -X POST http://localhost:{PORT}/anything/users -H "Host: httpbin.org" -H "Content-Type: application/json" -d '{"name":"test"}'
    curl http://localhost:{PORT}/anything/users/123 -H "Host: httpbin.org"
    curl -X PUT http://localhost:{PORT}/anything/users/123 -H "Host: httpbin.org" -H "Content-Type: application/json" -d '{"name":"updated"}'
    curl -X DELETE http://localhost:{PORT}/anything/users/123 -H "Host: httpbin.org"

servers:
  - url: https://httpbin.org
    description: HTTPBin test server (proxied through the gateway)

x-flowplane-filters:
  # Add tracking header to demonstrate global filters
  - filter:
      type: header_mutation
      request_headers_to_add:
        - key: x-demo
          value: "method-extraction"
          append: false

paths:
  # Static path with multiple methods - demonstrates prefix matching
  /anything/users:
    get:
      summary: List all users
      description: |
        Retrieves a list of all users.
        This creates a route with match_type=prefix and :method=GET header matcher.
      responses:
        '200':
          description: List of users

    post:
      summary: Create a new user
      description: |
        Creates a new user.
        This creates a separate route with match_type=prefix and :method=POST header matcher.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User created

  # Parameterized path with multiple methods - demonstrates template matching
  /anything/users/{id}:
    get:
      summary: Get user by ID
      description: |
        Retrieves a specific user by ID.
        This creates a route with match_type=template and :method=GET header matcher.
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        '200':
          description: User details

    put:
      summary: Update user by ID
      description: |
        Updates a specific user by ID.
        This creates a separate route with match_type=template and :method=PUT header matcher.
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: User updated

    delete:
      summary: Delete user by ID
      description: |
        Deletes a specific user by ID.
        This creates a separate route with match_type=template and :method=DELETE header matcher.
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        '204':
          description: User deleted
