openapi: 3.0.0
info:
  title: Custom Response Filter Demo
  version: 1.0.0
  description: |
    NOTE: The custom_response filter requires complex matcher tree configuration
    to define which status codes to intercept and what body to return.

    Currently, the matcher configuration requires base64-encoded protobuf, which
    is not practical to configure via OpenAPI. This example shows the structure,
    but a full implementation would need Native API or enhanced OpenAPI support.

    The route-level override (disabled) works and is demonstrated in /health.

servers:
  - url: https://httpbin.org

x-flowplane-filters:
  - filter:
      type: custom_response
      # TODO: Matcher configuration needed here to specify:
      # - Which status codes to match (e.g., 400, 500)
      # - What response body to return (e.g., {"error": "bad request"})
      # This requires complex protobuf matcher tree configuration
  - filter:
      type: cors
      policy:
        allow_origin:
          - type: exact
            value: "*"
        allow_methods:
          - GET
        allow_headers:
          - content-type
        max_age: 3600

paths:
  /status/200:
    get:
      summary: Success response
      responses:
        '200':
          description: Success

  /status/400:
    get:
      summary: Bad request (would return custom response if matcher configured)
      responses:
        '400':
          description: Bad Request

  /status/500:
    get:
      summary: Server error (would return custom response if matcher configured)
      responses:
        '500':
          description: Internal Server Error

  /health:
    get:
      summary: Health check with custom_response disabled (WORKS)
      x-flowplane-route-overrides:
        custom_response: disabled
      responses:
        '200':
          description: OK

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        status_code:
          type: integer
        message:
          type: string
