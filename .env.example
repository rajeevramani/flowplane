# ============================================================================
# Flowplane Environment Variables Configuration
# ============================================================================
#
# Copy this file to .env and customize the values for your environment:
#   cp .env.example .env
#
# The .env file will be automatically loaded by Docker Compose

# ============================================================================
# AUTHENTICATION
# ============================================================================

# Bootstrap Token (Required for application startup)
# SECURITY: This token is used for initial admin access to the control plane API
# IMPORTANT: Must be at least 32 characters long for security
# Generate a secure token: openssl rand -base64 32
# Example: BOOTSTRAP_TOKEN="your-secure-bootstrap-token-min-32-chars-required-here"
BOOTSTRAP_TOKEN="change-me-to-secure-token-min-32-characters-long"

# API Token for HTTP tests (Optional - for .http files)
# This is the FULL token (fp_pat_...) that you get from server logs on first startup
# OR create one with: cargo run --bin flowplane-cli auth create-token --name "test" --scope admin:all
# Example: API_TOKEN="fp_pat_abc-123-def-456.your-secret-here"
API_TOKEN=""

# ============================================================================
# DATABASE
# ============================================================================

# Database connection URL
# SQLite (default, for development):
# DATABASE_URL=sqlite:///app/data/flowplane.db

# PostgreSQL (for production):
# DATABASE_URL=postgresql://user:password@postgres:5432/flowplane

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================

# HTTP API server
# FLOWPLANE_API_BIND_ADDRESS=0.0.0.0
# FLOWPLANE_API_PORT=8080

# xDS gRPC server
# FLOWPLANE_XDS_BIND_ADDRESS=0.0.0.0
# FLOWPLANE_XDS_PORT=50051

# ============================================================================
# LOGGING
# ============================================================================

# Rust log levels: error, warn, info, debug, trace
# Format: target=level,target=level
# RUST_LOG=info,flowplane=debug

# ============================================================================
# OBSERVABILITY - METRICS
# ============================================================================

# Enable Prometheus metrics endpoint
# FLOWPLANE_ENABLE_METRICS=true

# ============================================================================
# OBSERVABILITY - TRACING
# ============================================================================

# Enable distributed tracing
# FLOWPLANE_ENABLE_TRACING=true

# OpenTelemetry OTLP endpoint
# For Zipkin (OTLP HTTP):
# FLOWPLANE_OTLP_ENDPOINT=http://zipkin:9411/api/v2/spans

# For Jaeger (OTLP gRPC):
# FLOWPLANE_OTLP_ENDPOINT=http://jaeger:4317

# For OpenTelemetry Collector:
# FLOWPLANE_OTLP_ENDPOINT=http://otel-collector:4317

# Trace sampling ratio (0.0 to 1.0)
# 1.0 = 100% sampling (development)
# 0.1 = 10% sampling (production)
# FLOWPLANE_TRACE_SAMPLING_RATIO=1.0

# Service name for traces
# FLOWPLANE_SERVICE_NAME=flowplane-control-plane

# ============================================================================
# SECRETS MANAGEMENT
# ============================================================================

# Secrets can be provided via environment variables with FLOWPLANE_SECRET_ prefix
# These are used as fallback when Vault is not configured
# FLOWPLANE_SECRET_BOOTSTRAP_TOKEN=${BOOTSTRAP_TOKEN}

# HashiCorp Vault configuration (optional)
# VAULT_ADDR=http://vault:8200
# VAULT_TOKEN=flowplane-dev-token
# VAULT_NAMESPACE=flowplane
