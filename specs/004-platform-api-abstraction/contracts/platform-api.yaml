openapi: 3.0.3
info:
  title: Flowplane Platform API Abstraction
  description: High-level API for managing service endpoints without Envoy internals
  version: 1.0.0

paths:
  /v1/api-definitions:
    post:
      summary: Create new API definition
      description: Create a high-level API definition that automatically generates Envoy resources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDefinitionRequest'
            examples:
              simple_api:
                summary: Simple single-route API
                value:
                  team: "payments"
                  domain: "payments.flowplane.dev"
                  routes:
                    - path_config:
                        match_type: "prefix"
                        pattern: "/v1/"
                      upstream_config:
                        targets:
                          - name: "payments-backend"
                            endpoint: "payments.svc.cluster.local:8443"
                            weight: 100
                      timeout_seconds: 30
                  listener_isolation: false
              multi_upstream:
                summary: Blue/green deployment with multiple upstreams
                value:
                  team: "user-service"
                  domain: "users.flowplane.dev"
                  routes:
                    - path_config:
                        match_type: "prefix"
                        pattern: "/api/"
                        rewrite:
                          prefix: "/internal/"
                      upstream_config:
                        targets:
                          - name: "users-blue"
                            endpoint: "users-blue.svc.cluster.local:8080"
                            weight: 80
                          - name: "users-green"
                            endpoint: "users-green.svc.cluster.local:8080"
                            weight: 20
                        load_balancing: "weighted_round_robin"
                      timeout_seconds: 15
                      override_config:
                        cors:
                          allow_origins: ["https://app.example.com"]
                  listener_isolation: true
                  listener:
                    name: "shared-users-listener"
                    bind_address: "0.0.0.0"
                    port: 10010
                    protocol: "HTTP"
      responses:
        '201':
          description: API definition created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinitionResponse'
        '400':
          description: Invalid request or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '409':
          description: Collision detected with existing API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollisionError'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationError'

    get:
      summary: List API definitions
      description: Retrieve API definitions for the authenticated team
      parameters:
        - name: team
          in: query
          description: Filter by team name
          schema:
            type: string
        - name: domain
          in: query
          description: Filter by domain
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            default: 50
            maximum: 200
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of API definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinitionList'

  /v1/api-definitions/{id}:
    get:
      summary: Get API definition
      description: Retrieve specific API definition by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: API definition ID
      responses:
        '200':
          description: API definition details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinitionResponse'
        '404':
          description: API definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update API definition
      description: Update existing API definition configuration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: API definition ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDefinitionUpdateRequest'
      responses:
        '200':
          description: API definition updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinitionResponse'
        '400':
          description: Invalid update request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: API definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Update would create collision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollisionError'

    delete:
      summary: Delete API definition
      description: Delete API definition and associated routes (clusters preserved)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: API definition ID
      responses:
        '204':
          description: API definition deleted successfully
        '404':
          description: API definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/api-definitions/{id}/routes:
    post:
      summary: Add route to API definition
      description: Incrementally add new route to existing API definition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: API definition ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteAddRequest'
            examples:
              add_healthcheck:
                summary: Add health check route
                value:
                  route:
                    path_config:
                      match_type: "exact"
                      pattern: "/healthz"
                    upstream_config:
                      targets:
                        - name: "payments-admin"
                          endpoint: "payments-admin.svc.cluster.local:8080"
                          weight: 100
                    timeout_seconds: 5
                  deployment_note: "Add health check endpoint"
              add_versioned_api:
                summary: Add new API version
                value:
                  route:
                    path_config:
                      match_type: "prefix"
                      pattern: "/v2/"
                      rewrite:
                        prefix: "/internal/v2/"
                    upstream_config:
                      targets:
                        - name: "payments-backend"
                          endpoint: "payments.svc.cluster.local:8443"
                          weight: 100
                    timeout_seconds: 30
                    override_config:
                      auth:
                        type: "oidc"
                        provider: "auth0"
                  deployment_note: "Enable v2 API with authentication"
      responses:
        '202':
          description: Route added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteAddResponse'
        '400':
          description: Invalid route configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: API definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Route conflicts with existing paths
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollisionError'

  /v1/api-definitions/{id}/routes/{route_id}:
    delete:
      summary: Remove route from API definition
      description: Remove specific route from API definition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: API definition ID
        - name: route_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Route ID
      responses:
        '204':
          description: Route removed successfully
        '404':
          description: API definition or route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/api-definitions/{id}/bootstrap:
    get:
      summary: Download Envoy bootstrap
      description: Get downloadable Envoy bootstrap configuration for API definition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: API definition ID
        - name: format
          in: query
          description: Bootstrap format
          schema:
            type: string
            enum: ["yaml", "json"]
            default: "yaml"
      responses:
        '200':
          description: Envoy bootstrap configuration
          content:
            application/yaml:
              schema:
                type: string
                description: Envoy bootstrap YAML
            application/json:
              schema:
                type: object
                description: Envoy bootstrap JSON
        '404':
          description: API definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ApiDefinitionRequest:
      type: object
      required:
        - team
        - domain
        - routes
      properties:
        team:
          type: string
          description: Team name for ownership and RBAC
          minLength: 1
          maxLength: 64
          pattern: '^[a-z0-9-]+$'
        domain:
          type: string
          description: Domain name for the API
          format: hostname
        routes:
          type: array
          items:
            $ref: '#/components/schemas/RouteConfig'
          minItems: 1
          description: Initial routes for the API
        listener_isolation:
          type: boolean
          default: false
          description: Whether to use dedicated listener
        listener:
          $ref: '#/components/schemas/IsolationListenerRequest'
          description: Dedicated listener configuration (required when listener_isolation=true)
        tls:
          $ref: '#/components/schemas/TlsConfig'
          description: Optional TLS configuration
        metadata:
          type: object
          additionalProperties: true
          description: Additional metadata for API definition

    ApiDefinitionUpdateRequest:
      type: object
      properties:
        listener_isolation:
          type: boolean
          description: Update listener isolation setting
        tls:
          $ref: '#/components/schemas/TlsConfig'
          description: Update TLS configuration
        metadata:
          type: object
          additionalProperties: true
          description: Update metadata

    ApiDefinitionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: API definition ID
        team:
          type: string
          description: Owning team name
        domain:
          type: string
          description: API domain
        listener:
          type: string
          description: Generated listener name
        routes:
          type: array
          items:
            type: string
          description: Generated route names
        clusters:
          type: array
          items:
            type: string
          description: Generated cluster names
        bootstrap_uri:
          type: string
          format: uri
          description: Download URL for Envoy bootstrap
        version:
          type: integer
          description: Configuration version
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    ApiDefinitionList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ApiDefinitionResponse'
        total:
          type: integer
          description: Total number of API definitions
        limit:
          type: integer
          description: Maximum results per page
        offset:
          type: integer
          description: Current page offset

    RouteConfig:
      type: object
      required:
        - path_config
        - upstream_config
      properties:
        path_config:
          $ref: '#/components/schemas/PathConfig'
        upstream_config:
          $ref: '#/components/schemas/UpstreamConfig'
        timeout_seconds:
          type: integer
          minimum: 1
          maximum: 300
          default: 30
          description: Request timeout in seconds
        override_config:
          $ref: '#/components/schemas/RouteOverrideConfig'
          description: Route-specific configuration overrides

    PathConfig:
      type: object
      required:
        - match_type
        - pattern
      properties:
        match_type:
          type: string
          enum: ["prefix", "exact", "safe_regex"]
          description: Type of path matching
        pattern:
          type: string
          minLength: 1
          description: Path pattern to match
        rewrite:
          $ref: '#/components/schemas/PathRewrite'
          description: Optional path rewriting
        case_sensitive:
          type: boolean
          default: true
          description: Whether matching is case sensitive

    PathRewrite:
      type: object
      properties:
        prefix:
          type: string
          description: Replace matched prefix with this value
        regex:
          $ref: '#/components/schemas/RegexRewrite'
          description: Advanced regex-based rewriting

    RegexRewrite:
      type: object
      required:
        - pattern
        - substitution
      properties:
        pattern:
          type: string
          description: Regex pattern for matching
        substitution:
          type: string
          description: Replacement string

    UpstreamConfig:
      type: object
      required:
        - targets
      properties:
        targets:
          type: array
          items:
            $ref: '#/components/schemas/UpstreamTarget'
          minItems: 1
          description: Backend service targets
        load_balancing:
          type: string
          enum: ["round_robin", "weighted_round_robin", "least_request"]
          default: "round_robin"
          description: Load balancing policy
        health_check:
          $ref: '#/components/schemas/HealthCheckConfig'
          description: Health checking configuration
        circuit_breaker:
          $ref: '#/components/schemas/CircuitBreakerConfig'
          description: Circuit breaker settings

    UpstreamTarget:
      type: object
      required:
        - name
        - endpoint
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[a-z0-9-]+$'
          description: Target identifier
        endpoint:
          type: string
          description: Service endpoint (host:port)
          pattern: '^[a-zA-Z0-9.-]+:[0-9]+$'
        weight:
          type: integer
          minimum: 1
          maximum: 100
          description: Traffic weight percentage
        tls_enabled:
          type: boolean
          default: false
          description: Use TLS for upstream connection
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Additional target metadata

    RouteOverrideConfig:
      type: object
      properties:
        cors:
          $ref: '#/components/schemas/CorsOverride'
          description: CORS policy override
        auth:
          $ref: '#/components/schemas/AuthOverride'
          description: Authentication override
        rate_limit:
          $ref: '#/components/schemas/RateLimitOverride'
          description: Rate limiting override
        timeout:
          $ref: '#/components/schemas/TimeoutOverride'
          description: Timeout override
        headers:
          $ref: '#/components/schemas/HeaderOverride'
          description: Header manipulation override

    CorsOverride:
      type: object
      properties:
        allow_origins:
          type: array
          items:
            type: string
          description: Allowed origins for CORS
        allow_methods:
          type: array
          items:
            type: string
          description: Allowed HTTP methods
        allow_credentials:
          type: boolean
          description: Allow credentials in CORS requests

    AuthOverride:
      type: object
      properties:
        type:
          type: string
          enum: ["none", "jwt", "oidc", "basic"]
          description: Authentication type
        provider:
          type: string
          description: Authentication provider
        config:
          type: object
          additionalProperties: true
          description: Provider-specific configuration

    TlsConfig:
      type: object
      required:
        - mode
        - cert_source
      properties:
        mode:
          type: string
          enum: ["terminate", "passthrough", "mutual"]
          description: TLS termination mode
        cert_source:
          $ref: '#/components/schemas/CertificateSource'
          description: Certificate source configuration
        key_source:
          $ref: '#/components/schemas/KeySource'
          description: Private key source configuration
        client_auth:
          $ref: '#/components/schemas/ClientAuthConfig'
          description: Mutual TLS configuration

    CertificateSource:
      type: object
      required:
        - type
        - reference
      properties:
        type:
          type: string
          enum: ["secret_manager", "file", "inline"]
          description: Certificate source type
        reference:
          type: string
          description: Certificate reference (ARN, path, or content)

    RouteAddRequest:
      type: object
      required:
        - route
      properties:
        route:
          $ref: '#/components/schemas/RouteConfig'
          description: Route configuration to add
        deployment_note:
          type: string
          maxLength: 256
          description: Optional deployment note

    RouteAddResponse:
      type: object
      properties:
        api_id:
          type: string
          format: uuid
          description: API definition ID
        route_id:
          type: string
          format: uuid
          description: Created route ID
        revision:
          type: integer
          description: New API definition revision
        bootstrap_uri:
          type: string
          format: uri
          description: Updated bootstrap download URL

    ValidationError:
      type: object
      properties:
        error:
          type: string
          description: Error message
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/FieldError'
          description: Field-specific validation errors

    FieldError:
      type: object
      properties:
        field:
          type: string
          description: Field name with error
        message:
          type: string
          description: Validation error message
        code:
          type: string
          description: Error code for programmatic handling

    CollisionError:
      type: object
      properties:
        error:
          type: string
          description: Collision error message
        collision_type:
          type: string
          enum: ["domain_conflict", "path_conflict", "listener_conflict"]
          description: Type of collision detected
        conflicting_resource:
          type: object
          properties:
            id:
              type: string
              format: uuid
            team:
              type: string
            domain:
              type: string
            path:
              type: string
          description: Details of conflicting resource
        suggestions:
          type: array
          items:
            type: string
          description: Suggested alternatives

    AuthorizationError:
      type: object
      properties:
        error:
          type: string
          description: Authorization error message
        required_scope:
          type: string
          description: Required permission scope
        user_scopes:
          type: array
          items:
            type: string
          description: User's current scopes

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code

    IsolationListenerRequest:
      type: object
      description: Dedicated listener configuration used when listener_isolation=true
      properties:
        name:
          type: string
          description: Optional shared listener name to reuse if it already exists
        bind_address:
          type: string
          description: Listener bind address (required when isolated)
        port:
          type: integer
          minimum: 1
          maximum: 65535
          description: Listener port (required when isolated)
        protocol:
          type: string
          enum: ["HTTP", "HTTPS"]
          default: "HTTP"
          description: Listener protocol

    # Placeholder schemas for referenced but not fully defined types
    HealthCheckConfig:
      type: object
      description: Health check configuration (future enhancement)

    CircuitBreakerConfig:
      type: object
      description: Circuit breaker configuration (future enhancement)

    RateLimitOverride:
      type: object
      description: Rate limiting override (future enhancement)

    TimeoutOverride:
      type: object
      description: Timeout override (future enhancement)

    HeaderOverride:
      type: object
      description: Header manipulation override (future enhancement)

    KeySource:
      type: object
      description: Private key source configuration

    ClientAuthConfig:
      type: object
      description: Client authentication configuration

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Personal Access Token for API authentication

security:
  - BearerAuth: []
